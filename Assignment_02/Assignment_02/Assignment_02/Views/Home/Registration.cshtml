@model Assignment_02.Models.Account

@{
    ViewBag.Title = "Registration";
}



<script>
    function submit_alert() {
        alert("Account has been created!.");
    }

    function reset_alert() {
        alert("Form has been clear!");
    }
</script>

<style>
    .BackButton {
        background-color: dodgerblue;
        text-decoration-color: white;
        padding: 10px;
        text-decoration: none;
        height: 60px;
        width: 120px;
        font-family: Arial;
        font-size: 15px;
        border-radius: 12px;
        border: none;
        text-align: center;
    }

    button {
        outline: none;
        border: none;
    }

    a:link {
        color: white;
        text-decoration: none;
    }

    a:hover {
        color: black;
        text-decoration: none;
    }

    a:visited {
        color: white;
        text-decoration: none;
    }
</style>

<h2>Registration</h2>

@Html.Raw(ViewBag.SameEmailMsg)
@Html.Raw(ViewBag.CreateAccountMsg)

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.FullName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FullName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FullName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AccountPassword, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.AccountPassword, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.AccountPassword, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PersonAddress, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PersonAddress, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PersonAddress, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PersonPhoneNo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PersonPhoneNo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PersonPhoneNo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(m => m.Gender, new List<SelectListItem>
              { new SelectListItem{Text="Male", Value="Male"},
                new SelectListItem{Text="Female", Value="Female"}}, "Please select Your Gender", new { style = "width:250px; height: 50px;" })
                @Html.ValidationMessageFor(model => model.Gender)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BloodType, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(m => m.BloodType, new List<SelectListItem>
               { new SelectListItem{Text="A+", Value="A+"},
                 new SelectListItem{Text="A-", Value="A-"},
                 new SelectListItem{Text="B+", Value="B+"},
                 new SelectListItem{Text="B-", Value="B-"},
                 new SelectListItem{Text="O+", Value="O+"},
                 new SelectListItem{Text="O-", Value="O-"},
                 new SelectListItem{Text="AB+", Value="AB+"},
                 new SelectListItem{Text="AB-", Value="AB-"}

                 ,
           }, "Please select Blood Type", new { style = "width:250px; height: 50px;" })
                @Html.ValidationMessageFor(model => model.BloodType)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AccountRole, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(m => m.AccountRole, new List<SelectListItem>
              { new SelectListItem{Text="Admin", Value="Admin"},
                new SelectListItem{Text="Patient", Value="Patient"},
                new SelectListItem{Text="Doctor", Value="Doctor"}},
                "Please select Your Account Role", new { style = "width:250px; height: 50px;" })
                @Html.ValidationMessageFor(model => model.AccountRole)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DOB, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DOB, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DOB, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input style="background-color:deepskyblue;color:white" type="submit" value="Create" class="btn btn-default" onclick="submit_alert()" />
            </div>
        </div>


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <label style="color:red;">@ViewBag.Notification</label>
            </div>
        </div>

    </div>
}
<div>
    <button class="BackButton">@Html.ActionLink("Back to Homepage", "Index")</button>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}